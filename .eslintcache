[{"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/index.js":"1","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/App.js":"2","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movie-detail/MovieDetail.js":"3","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movie-detail/AddMovieDetail.js":"4","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movie-detail/DisplayDetail.js":"5","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movie-detail/NoMovieDetail.js":"6","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/MainAddMoviePage.js":"7","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/sort-and-statistics/MoviesSort.js":"8","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/sort-and-statistics/Statistics.js":"9","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/store/MoviesContext.js":"10","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movies/Movies.js":"11","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movies/MovieCard.js":"12","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/store/SearchContext.js":"13","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/AddMovie.js":"14","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/Search.js":"15","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/AddDateModal.js":"16","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/manually/Form.js":"17","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/SearchItem.js":"18","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/manually/AddImgURLModal.js":"19","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/manually/Input.js":"20","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/LoadingSpinner.js":"21","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/FoundNoMovie.js":"22","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/Error.js":"23","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/pages/MainPage.js":"24","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movies/styled.js":"25","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/sort-and-statistics/styled.js":"26","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movie-detail/styled.js":"27","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/manually/styled.js":"28","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/styled.js":"29","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/styled.js":"30","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/layout/Header.js":"31","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/layout/Footer.js":"32","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/layout/styled.js":"33","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/layout/Backdrop.js":"34"},{"size":179,"mtime":1660496013544,"results":"35","hashOfConfig":"36"},{"size":133,"mtime":1660765489885,"results":"37","hashOfConfig":"36"},{"size":2232,"mtime":1660771091119,"results":"38","hashOfConfig":"36"},{"size":1616,"mtime":1660772567383,"results":"39","hashOfConfig":"36"},{"size":1195,"mtime":1660850628377,"results":"40","hashOfConfig":"36"},{"size":912,"mtime":1660772568840,"results":"41","hashOfConfig":"36"},{"size":1175,"mtime":1660772098008,"results":"42","hashOfConfig":"36"},{"size":1433,"mtime":1660771472021,"results":"43","hashOfConfig":"36"},{"size":1733,"mtime":1660771199994,"results":"44","hashOfConfig":"36"},{"size":2551,"mtime":1660496135563,"results":"45","hashOfConfig":"36"},{"size":4767,"mtime":1660771452293,"results":"46","hashOfConfig":"36"},{"size":3079,"mtime":1660771341145,"results":"47","hashOfConfig":"36"},{"size":2150,"mtime":1660682428723,"results":"48","hashOfConfig":"36"},{"size":568,"mtime":1660683678444,"results":"49","hashOfConfig":"36"},{"size":6083,"mtime":1660772350376,"results":"50","hashOfConfig":"36"},{"size":1947,"mtime":1660772379131,"results":"51","hashOfConfig":"36"},{"size":3785,"mtime":1660772228743,"results":"52","hashOfConfig":"36"},{"size":1470,"mtime":1660687661003,"results":"53","hashOfConfig":"36"},{"size":1902,"mtime":1660772398358,"results":"54","hashOfConfig":"36"},{"size":648,"mtime":1660768921771,"results":"55","hashOfConfig":"36"},{"size":240,"mtime":1660850802466,"results":"56","hashOfConfig":"36"},{"size":241,"mtime":1660681274635,"results":"57","hashOfConfig":"36"},{"size":329,"mtime":1660681244843,"results":"58","hashOfConfig":"36"},{"size":627,"mtime":1660765687018,"results":"59","hashOfConfig":"36"},{"size":1585,"mtime":1660770560364,"results":"60","hashOfConfig":"36"},{"size":1451,"mtime":1660766270327,"results":"61","hashOfConfig":"36"},{"size":1787,"mtime":1660772764450,"results":"62","hashOfConfig":"36"},{"size":1678,"mtime":1660769281517,"results":"63","hashOfConfig":"36"},{"size":1064,"mtime":1660850754007,"results":"64","hashOfConfig":"36"},{"size":2053,"mtime":1660769196285,"results":"65","hashOfConfig":"36"},{"size":180,"mtime":1660765761170,"results":"66","hashOfConfig":"36"},{"size":180,"mtime":1660765487047,"results":"67","hashOfConfig":"36"},{"size":480,"mtime":1660765689738,"results":"68","hashOfConfig":"36"},{"size":175,"mtime":1660765767672,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1ycevt3",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/index.js",[],["148","149"],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/App.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movie-detail/MovieDetail.js",["150"],"import React, { useContext, useState } from \"react\";\nimport MoviesContext from \"../../store/MoviesContext\";\nimport AddMovieDetail from \"./AddMovieDetail\";\nimport NoMovieDetail from \"./NoMovieDetail\";\nimport DisplayDetail from \"./DisplayDetail\";\n\nexport default function MovieDetail(props) {\n  const {\n    movies,\n    clickedMovieId,\n    setMovies,\n    setDisplayedDetail,\n    displayedDetail,\n    setDetailState,\n    detailState,\n  } = useContext(MoviesContext);\n\n  //State sledující detail, který se vyplňuje\n  const [filledDetail, setFilledDetail] = useState(\"\");\n\n  const detailClick = () => {\n    props.detailClick();\n  };\n\n  const handleDetailChange = (event) => {\n    setFilledDetail(event.target.value);\n    setDisplayedDetail(event.target.value);\n  };\n\n  //Přepunutí state, když se klikne na Add Movie Detail (aby se vyrenderovalo textové pole)\n  const addMovieDetailHandler = () => {\n    setDetailState(\"DISPLAY-TEXT_AREA\");\n  };\n\n  //Vyplňování detailu a update movie v array z MoviesContextu\n  const detailSubmitHandler = (event) => {\n    event.preventDefault();\n    setDetailState(\"DISPLAY-DETAIL\");\n    console.log(displayedDetail);\n\n    const updatedMovies = movies.map((movie) => {\n      if (movie.id === clickedMovieId) {\n        return { ...movie, detail: filledDetail };\n      }\n      return movie;\n    });\n    setMovies(updatedMovies);\n  };\n\n  const closeDetailHandler = () => {\n    props.detailClick();\n  };\n\n  //1. možný render - Když daný film má přidaný detail, tak se vyrenderuje detail.\n  if (detailState == \"DISPLAY-DETAIL\") {\n    return <DisplayDetail detailClick={detailClick} />;\n  }\n\n  //2. možný render - textové pole se zadanim detailu\n  else if (detailState === \"DISPLAY-TEXT_AREA\") {\n    return (\n      <AddMovieDetail\n        handleDetailChange={handleDetailChange}\n        filledDetail={filledDetail}\n        detailSubmitHandler={detailSubmitHandler}\n        closeDetailHandler={closeDetailHandler}\n      />\n    );\n  }\n\n  //3. možný render - když rozkliknutý film nemá detail\n  else if (detailState === \"DISPLAY-NO_DETAIL\") {\n    return (\n      <NoMovieDetail\n        addMovieDetailHandler={addMovieDetailHandler}\n        detailClick={detailClick}\n      />\n    );\n  }\n}\n","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movie-detail/AddMovieDetail.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movie-detail/DisplayDetail.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movie-detail/NoMovieDetail.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/MainAddMoviePage.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/sort-and-statistics/MoviesSort.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/sort-and-statistics/Statistics.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/store/MoviesContext.js",["151","152","153"],"import { createContext, useEffect, useState } from \"react\";\n\nconst MoviesContext = createContext();\n\nexport function MoviesContextProvider({ children }) {\n  // *STATES*\n  //Array s filmy, do kt. se budou přidávat\n  const [movies, setMovies] = useState([]);\n  const [displayedDetail, setDisplayedDetail] = useState(\"\");\n  //Sleduje ID filmu, na který se kliknulo - aby pak šel identifikovat až se bude měnit detail\n  const [clickedMovieId, setClickedMovieId] = useState(\"\");\n  // Sleduje sort condition - viz. MoviesSort.js\n  const [sortCondition, setSortCondition] = useState(\"\");\n\n  //State, kterému se přidělují 3 hodnoty a podle nich se podmíněně renderujou věci v modálním okně (comp. MovieDetail).\n  //Tyto hodnoty může state mít:\n  // \"DISPLAY-DETAIL\"\n  // \"DISPLAY-TEXT_AREA\"\n  // \"DISPLAY-NO_DETAIL\"\n  const [detailState, setDetailState] = useState(\"\");\n\n  //Initial načtení a zobrazení z localStorage\n  useEffect(() => {\n    const localData = localStorage.getItem(\"movies\");\n    if (localData) {\n      setMovies(JSON.parse(localData));\n    }\n  }, []);\n\n  //Ukládání movies do localStorage\n  useEffect(() => {\n    localStorage.setItem(\"movies\", JSON.stringify(movies));\n  }, [movies]);\n\n  // **FUNCTIONS**\n  //Funkce na přidání filmu do array\n  const addToMovies = (addedMovie) => {\n    const movieToBeAdded = {\n      id: addedMovie.id,\n      title: addedMovie.title,\n      movieYear: addedMovie.movieYear,\n      imageURL: addedMovie.imageURL,\n      dateWatched: addedMovie.dateWatched,\n      stars_1: 0,\n      stars_2: 0,\n      totalRating: null,\n      detail: \"\",\n    };\n\n    setMovies((prevMovies) => {\n      return [movieToBeAdded, ...prevMovies];\n    });\n  };\n\n  //Funkce na odstranění filmu po kliknutí na ikonu.\n  const deleteMovie = (movieId) => {\n    setMovies((prevMovies) => {\n      const updatedMovies = prevMovies.filter((movie) => movie.id !== movieId);\n      return updatedMovies;\n    });\n  };\n\n  const onChangeDisplayedDetail = () => {\n    const detailToBeShown = movies.find(\n      (movie) => movie.id == clickedMovieId\n    ).detail;\n\n    setDisplayedDetail(detailToBeShown);\n  };\n\n  return (\n    <MoviesContext.Provider\n      value={{\n        movies,\n        setMovies,\n        addToMovies,\n        deleteMovie,\n        displayedDetail,\n        setDisplayedDetail,\n        setClickedMovieId,\n        clickedMovieId,\n        onChangeDisplayedDetail,\n        setDetailState,\n        detailState,\n      }}\n    >\n      {children}\n    </MoviesContext.Provider>\n  );\n}\nexport default MoviesContext;\n","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movies/Movies.js",["154","155","156","157","158"],"import { React, useContext, useState, useEffect } from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport MovieDetail from \"../movie-detail/MovieDetail\";\nimport MoviesSort from \"../sort-and-statistics/MoviesSort\";\nimport { StyledMovies } from \"./styled\";\nimport { ContainerMovies } from \"./styled\";\nimport { StyledNoMoviesFound } from \"./styled\";\nimport MoviesContext from \"../../store/MoviesContext\";\nimport Backdrop from \"../../layout/Backdrop\";\n\nexport default function Movies(props) {\n  const {\n    movies,\n    setDisplayedDetail,\n    setClickedMovieId,\n    setDetailState,\n    setMovies,\n  } = useContext(MoviesContext);\n\n  // *STATES*\n  const [detailClicked, setDetailClicked] = useState(false);\n  const [sortCondition, setSortCondition] = useState(\"\");\n  const [sortedMovies, setSortedMovies] = useState(movies);\n\n  //Po načtení se nastaví default seřazování na Date newest\n  useEffect(() => {\n    setSortCondition(\"Date newest\");\n  }, []);\n\n  //Sorting logika - běží při přidání movie - nový movie má na začátku hodnocení 0 (řadí se dle nastavené sort condition), nebo při změně sort condition, nebo při zadání hodnocení.\n  useEffect(() => {\n    let moviesToBeSorted;\n    if (sortCondition == \"Rating lowest\") {\n      moviesToBeSorted = [...movies].sort((a, b) => {\n        return a.totalRating - b.totalRating;\n      });\n      setSortedMovies(moviesToBeSorted);\n    } else if (sortCondition == \"Rating highest\") {\n      moviesToBeSorted = [...movies].sort((a, b) => {\n        return b.totalRating - a.totalRating;\n      });\n      setSortedMovies(moviesToBeSorted);\n    } else if (sortCondition == \"Date newest\") {\n      moviesToBeSorted = [...movies].sort((a, b) => {\n        return new Date(b.dateWatched) - new Date(a.dateWatched);\n      });\n      setSortedMovies(moviesToBeSorted);\n    } else if (sortCondition == \"Date oldest\") {\n      moviesToBeSorted = [...movies].sort((a, b) => {\n        return new Date(a.dateWatched) - new Date(b.dateWatched);\n      });\n      setSortedMovies(moviesToBeSorted);\n    }\n  }, [movies, sortCondition]);\n\n  // **FUNCTIONS**\n  ///Kliknuti na obrázek filmu\n  const handleMovieClick = (movieId) => {\n    setDetailClicked(true);\n    setClickedMovieId(movieId);\n\n    const detailToBeShown = movies.find((movie) => movie.id == movieId).detail;\n    if (detailToBeShown.length > 0) {\n      setDetailState(\"DISPLAY-DETAIL\");\n      console.log(detailToBeShown);\n      setDisplayedDetail(detailToBeShown);\n    } else setDetailState(\"DISPLAY-NO_DETAIL\");\n    setDisplayedDetail(detailToBeShown);\n  };\n\n  const handleMovieClickBack = () => {\n    setDetailClicked(false);\n  };\n  //update object property v původní array po změně ratingu\n  const ratingLUpdate = (movieId, newValue) => {\n    const updatedMovies = movies.map((movie) => {\n      if (movie.id === movieId) {\n        return {\n          ...movie,\n          stars_1: newValue,\n          totalRating: movie.stars_2 + newValue,\n        };\n      }\n      return movie;\n    });\n    setMovies(updatedMovies);\n  };\n  //update object property v původní array po změně ratingu\n  const ratingVUpdate = (movieId, newValue) => {\n    const updatedMovies = movies.map((movie) => {\n      if (movie.id === movieId) {\n        return {\n          ...movie,\n          stars_2: newValue,\n          totalRating: movie.stars_1 + newValue,\n        };\n      }\n      return movie;\n    });\n    setMovies(updatedMovies);\n    console.log(updatedMovies);\n  };\n\n  //Nastavení sort condition po vybrání ze Selectu\n  const onChangeSortHandler = (condition) => {\n    setSortCondition(condition);\n  };\n\n  return movies.length > 0 ? (\n    //Pokud je přidán nějaký film, vyrenderujou se filmy + MoviesSort. Pokud není přidán žádný film, vyrenderuje se component viz. níž.\n    <div>\n      <MoviesSort onChangeSort={onChangeSortHandler} selected={sortCondition} />\n\n      <ContainerMovies>\n        <StyledMovies>\n          {sortedMovies.map((movie) => (\n            <MovieCard\n              key={movie.id}\n              id={movie.id}\n              title={movie.title}\n              movieYear={movie.movieYear}\n              dateWatched={movie.dateWatched}\n              imageURL={movie.imageURL}\n              detailClick={handleMovieClick}\n              ratingLUpdate={ratingLUpdate}\n              ratingVUpdate={ratingVUpdate}\n            />\n          ))}\n          {detailClicked ? (\n            <Backdrop>\n              <MovieDetail\n                detailClick={handleMovieClickBack}\n                movieState={detailClicked}\n              />\n            </Backdrop>\n          ) : (\n            \"\"\n          )}\n        </StyledMovies>\n      </ContainerMovies>\n    </div>\n  ) : (\n    <StyledNoMoviesFound>No movies added 🥺 </StyledNoMoviesFound>\n  );\n}\n","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movies/MovieCard.js",["159","160","161","162","163","164"],"import { React, useContext, useEffect } from \"react\";\nimport { StyledMovieCard } from \"./styled\";\nimport { Rating } from \"@mui/material\";\nimport { useState } from \"react\";\n\nimport MoviesContext from \"../../store/MoviesContext\";\n\nexport default function MovieCard(props) {\n  // *STATES*\n  const [valueL, setValueL] = useState(null);\n  const [valueV, setValueV] = useState(null);\n\n  const { deleteMovie } = useContext(MoviesContext);\n\n  //Upravení formátu datumu\n  const date = new Date(props.dateWatched);\n  const month = date.toLocaleString(\"en-US\", { month: \"2-digit\" });\n  const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = date.getFullYear();\n\n  const myDate = day + \"-\" + month + \"-\" + year;\n\n  //Upravení formátu movieDate\n  const dateFilmed = props.movieYear;\n  const dateFilmedType = typeof dateFilmed;\n\n  //Načítání a zobrazování ratingu z localStorage při vyrenderování komponentu.\n  useEffect(() => {\n    const localData = localStorage.getItem(\"movies\");\n    if (localData) {\n      const localDataParsed = JSON.parse(localData);\n      const localRatingL = localDataParsed.find(\n        (movie) => movie.id == props.id\n      ).stars_1;\n      const localRatingV = localDataParsed.find(\n        (movie) => movie.id == props.id\n      ).stars_2;\n      setValueL(localRatingL);\n      setValueV(localRatingV);\n    }\n  }, []);\n\n  //Zobrazení uděleného ratingu\n  const onChangeRatingL = (event, newValue) => {\n    setValueL(newValue);\n    onChangeRatingLArrayUpdate(newValue);\n  };\n\n  const onChangeRatingV = (event, newValue) => {\n    setValueV(newValue);\n    onChangeRatingVArrayUpdate(newValue);\n  };\n\n  //Uložení uděleného ratingu do array\n  const onChangeRatingLArrayUpdate = (newValue) => {\n    props.ratingLUpdate(props.id, newValue);\n  };\n\n  const onChangeRatingVArrayUpdate = (newValue) => {\n    props.ratingVUpdate(props.id, newValue);\n  };\n\n  const onClickButton = () => {\n    deleteMovie(props.id);\n  };\n\n  const onClickImg = () => {\n    props.detailClick(props.id);\n  };\n\n  return (\n    <StyledMovieCard>\n      <div className=\"img-icon-container\">\n        <img\n          src={props.imageURL}\n          width=\"138px\"\n          height=\"195px\"\n          onClick={onClickImg}\n        />\n        <p className=\"delete-icon\" onClick={onClickButton}>\n          ❌\n        </p>\n      </div>\n      <h2 className=\"title-text\">{props.title}</h2>\n      <h3>\n        {dateFilmedType == \"number\" || dateFilmedType == \"string\"\n          ? dateFilmed\n          : \"---\"}\n      </h3>\n      <h4>{myDate}</h4>\n      <div className=\"rating\">\n        L:\n        <Rating\n          name=\"simple-controlled\"\n          value={valueL}\n          onChange={onChangeRatingL}\n          size=\"small\"\n          max={10}\n          precision={0.5}\n        />\n      </div>\n      <div className=\"rating\">\n        V:{\" \"}\n        <Rating\n          name=\"simple-controlled\"\n          value={valueV}\n          onChange={onChangeRatingV}\n          size=\"small\"\n          max={10}\n          precision={0.5}\n        />\n      </div>\n    </StyledMovieCard>\n  );\n}\n","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/store/SearchContext.js",["165"],"import { createContext, useState } from \"react\";\n\nconst SearchContext = createContext();\n\nexport function SearchContextProvider({ children }) {\n  //*STATES*\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  //Tady jsou dotáhnuté movies z API na základě vyhledávání\n  const [foundMovies, setFoundMovies] = useState(\"\");\n\n  const [clickedMovieID, setClickedMovieID] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [error, setError] = useState(null);\n\n  //State na základě kterého se vyrenderuje titulní stránka/search/manuální přidání\n  const [addMovieState, setAddMovieState] = useState(\"PICK\");\n\n  // *API data*\n  const API_KEY = \"api_key=274808d92789c49e637a022e855f63dd\";\n  const BASE_URL = \"https://api.themoviedb.org/3\";\n\n  const API_URL =\n    BASE_URL + \"/discover/movie?sort_by=popularity.desc&\" + API_KEY; //most popular movies\n\n  const IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n  const searchURL = BASE_URL + \"/search/movie?\" + API_KEY + \"&query=\"; //k tomuto potřeba přidat \"&query=hledanyNazev\"\n\n  //např. https://api.themoviedb.org/3/search/movie?api_key=274808d92789c49e637a022e855f63dd&query=potter\n\n  function getMovies(url) {\n    setIsLoading(true);\n    setError(null);\n\n    fetch(url + searchTerm)\n      .then((res) => {\n        if (!res.ok) {\n          throw Error(\"⚙️ Something went wrong: could not fetch the data ⚙️\");\n        } else {\n          return res.json();\n        }\n      })\n      .then((data) => {\n        setFoundMovies(data.results);\n        setIsLoading(false);\n        setError(null);\n      })\n      .catch((error) => {\n        setIsLoading(false);\n\n        setError(error.message);\n      });\n  }\n\n  return (\n    <SearchContext.Provider\n      value={{\n        setFoundMovies,\n        foundMovies,\n        searchTerm,\n        setSearchTerm,\n        getMovies,\n        searchURL,\n        IMG_API,\n        setClickedMovieID,\n        clickedMovieID,\n        isLoading,\n        setIsLoading,\n        error,\n        addMovieState,\n        setAddMovieState,\n      }}\n    >\n      {children}\n    </SearchContext.Provider>\n  );\n}\nexport default SearchContext;\n","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/AddMovie.js",["166","167","168"],"import React, { useContext } from \"react\";\nimport SearchContext from \"../../store/SearchContext\";\nimport MainAddMoviePage from \"./MainAddMoviePage\";\nimport Search from \"./search/Search\";\nimport Form from \"./manually/Form\";\n\nexport default function AddMovie() {\n  const { addMovieState, setAddMovieState } = useContext(SearchContext);\n\n  if (addMovieState == \"PICK\") {\n    return <MainAddMoviePage />;\n  } else if (addMovieState == \"SEARCH\") {\n    return <Search />;\n  } else if (addMovieState == \"MANUAL\") {\n    return <Form addMovieState={setAddMovieState} />;\n  }\n}\n","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/Search.js",["169","170","171","172","173"],"import React, { useContext, useState, useEffect } from \"react\";\nimport Input from \"../manually/Input\";\nimport { ContainerForm } from \"../manually/styled\";\nimport { Button } from \"@mui/material\";\nimport { StyledForm } from \"../manually/styled\";\nimport { StyledList } from \"./styled\";\nimport { StyledListShort } from \"./styled\";\nimport SearchItem from \"./SearchItem\";\nimport SearchContext from \"../../../store/SearchContext\";\nimport Backdrop from \"../../../layout/Backdrop\";\nimport AddDateModal from \"./AddDateModal\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport FoundNoMovie from \"./FoundNoMovie\";\nimport Error from \"./Error\";\nimport { TiArrowBackOutline } from \"react-icons/ti\";\n\nexport default function Search(props) {\n  const {\n    setSearchTerm,\n    getMovies,\n    searchURL,\n    foundMovies,\n    searchTerm,\n\n    isLoading,\n    error,\n    setAddMovieState,\n  } = useContext(SearchContext);\n\n  // 1. *STATES*\n  const [movieToBeAdded, setMovieToBeAdded] = useState({});\n  const [isDisplayedSearch, setIsDisplayedSearch] = useState(false);\n  const [isDisplayedDateModal, setIsDisplayedDateModal] = useState(false);\n\n  //API call, kde se hledá searchTerm po 0.5 vteřine, kdy user přestane psát\n  useEffect(() => {\n    const API_CALL = setTimeout(() => {\n      if (searchTerm) {\n        getMovies(searchURL);\n        setIsDisplayedSearch(true);\n      }\n    }, 500);\n    return () => clearTimeout(API_CALL);\n  }, [searchTerm]);\n\n  const liftUpMovieToBeAdded = (movie) => {\n    setMovieToBeAdded(movie);\n  };\n\n  const onChangeHandler = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const cancelSearch = () => {\n    setIsDisplayedSearch(false);\n  };\n\n  const backToMainPage = () => {\n    setAddMovieState(\"PICK\");\n  };\n  return (\n    <div>\n      <ContainerForm>\n        <StyledForm>\n          <div className=\"inputs-container search\">\n            <form>\n              <Input\n                label=\"Movie name\"\n                input={{\n                  id: \"Movie name\",\n                  type: \"search\",\n                }}\n                placeholder=\"Star Wars\"\n                onChangeInput={onChangeHandler}\n              />\n              {/* Toto se vyrenderuje pokud: 1. Se vyslal fetch request, 2. fetch request se i dokončil 3. našel se alespoň jeden film, 4. a zároveň nenastal error */}\n              {isDisplayedSearch &&\n              isLoading == false &&\n              foundMovies.length > 0 &&\n              error == null ? (\n                <div className=\"search-list-container\">\n                  <StyledList>\n                    {foundMovies.map((movie) => (\n                      <SearchItem\n                        key={movie.id}\n                        id={movie.id}\n                        title={movie.title}\n                        movieYear={movie.release_date}\n                        imageURL={movie.poster_path}\n                        searchDisplayToggle={cancelSearch}\n                        displayDateModalToggle={setIsDisplayedDateModal}\n                        liftUpMovieToBeAdded={liftUpMovieToBeAdded}\n                      />\n                    ))}\n                  </StyledList>\n                  <div className=\"search-button-container\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"error\"\n                      onClick={cancelSearch}\n                      startIcon={<TiArrowBackOutline />}\n                    >\n                      Back\n                    </Button>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {/* Toto se vyrenderuje pokud: 1. Se vyslal fetch request, 2.nastal při tom error */}\n              {isDisplayedSearch && error !== null ? (\n                <div className=\"search-list-container\">\n                  <StyledListShort>\n                    <Error />\n                  </StyledListShort>\n                  <div className=\"search-button-container\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"error\"\n                      onClick={cancelSearch}\n                      startIcon={<TiArrowBackOutline />}\n                    >\n                      Back\n                    </Button>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {/* Toto se vyrenderuje pokud: 1. Se vyslal fetch request, 2. fetch request se i dokončil 3. počet nalezených filmů je 0, 4. a zároveň nenastal error */}\n              {isDisplayedSearch &&\n              isLoading == false &&\n              foundMovies.length == 0 &&\n              error == null ? (\n                <div className=\"search-list-container\">\n                  <StyledListShort>\n                    <FoundNoMovie />\n                  </StyledListShort>\n                  <div className=\"search-button-container\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"error\"\n                      onClick={cancelSearch}\n                      startIcon={<TiArrowBackOutline />}\n                    >\n                      Back\n                    </Button>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {!isDisplayedSearch && !isLoading && (\n                <Button\n                  variant=\"outlined\"\n                  color=\"error\"\n                  onClick={backToMainPage}\n                  startIcon={<TiArrowBackOutline />}\n                >\n                  Back\n                </Button>\n              )}\n              {isLoading && <LoadingSpinner />}\n            </form>\n            {isDisplayedDateModal == true ? (\n              <Backdrop>\n                <AddDateModal\n                  displayDateModalToggle={setIsDisplayedDateModal}\n                  movieToBeAdded={movieToBeAdded}\n                />\n              </Backdrop>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </StyledForm>\n      </ContainerForm>\n    </div>\n  );\n}\n","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/AddDateModal.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/manually/Form.js",["174"],"import { React, useState, useContext } from \"react\";\nimport Input from \"./Input\";\nimport { ContainerForm } from \"./styled\";\nimport { StyledForm } from \"./styled\";\n/* import MoviesContext from \"../../../store/MoviesContext\"; */\nimport { Button } from \"@mui/material\";\nimport SearchContext from \"../../../store/SearchContext\";\n\nimport Backdrop from \"../../../layout/Backdrop\";\nimport AddImgURLModal from \"./AddImgURLModal\";\nimport { IoAddCircleOutline } from \"react-icons/io5\";\nimport { TiArrowBackOutline } from \"react-icons/ti\";\n\nexport default function Form(props) {\n  const [newTitle, setNewTitle] = useState();\n  const [newMovieYear, setNewMovieYear] = useState();\n  const [newDateWatched, setNewDateWatched] = useState();\n\n  const [movieToBeAdded, setMovieToBeAdded] = useState({});\n  const [addImgDisplay, setAddImgDisplay] = useState(false);\n\n  /* const { movies } = useContext(MoviesContext); */\n  const { setAddMovieState } = useContext(SearchContext);\n\n  const onChangeTitle = (e) => {\n    setNewTitle(e.target.value);\n  };\n  const onChangeDateFilmed = (e) => {\n    setNewMovieYear(e.target.value);\n  };\n  const onChangeDateWatched = (e) => {\n    setNewDateWatched(e.target.value);\n  };\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n\n    const movieItem = {\n      id: Math.random().toString(),\n      title: newTitle,\n      movieYear: newMovieYear,\n      dateWatched: newDateWatched,\n      stars_1: \"\",\n      stars_2: \"\",\n    };\n\n    setMovieToBeAdded(movieItem);\n    setAddImgDisplay(true);\n    setNewTitle(\"\");\n    setNewMovieYear(\"\");\n    setNewDateWatched(\"\");\n  };\n\n  const backToMainPage = () => {\n    setAddMovieState(\"PICK\");\n  };\n\n  const backToAddMovie = () => {\n    setAddImgDisplay(false);\n    backToMainPage();\n  };\n\n  return (\n    <ContainerForm>\n      <StyledForm>\n        <div className=\"inputs-container\">\n          <form onSubmit={onSubmitForm}>\n            <Input\n              label=\"Movie name\"\n              input={{\n                id: \"Movie name\",\n                type: \"text\",\n              }}\n              value={newTitle}\n              onChangeInput={onChangeTitle}\n              placeholder=\"Harry Potter\"\n            />\n            <Input\n              label=\"Year filmed\"\n              input={{\n                id: \"Year filmed\",\n                type: \"number\",\n                min: 1900,\n                max: 2022,\n                step: 1,\n              }}\n              value={newMovieYear}\n              onChangeInput={onChangeDateFilmed}\n              placeholder=\"2021\"\n            />\n            <Input\n              label=\"Date watched\"\n              input={{\n                id: \"Date watched\",\n                type: \"date\",\n              }}\n              value={newDateWatched}\n              onChangeInput={onChangeDateWatched}\n              inputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              startIcon={<IoAddCircleOutline />}\n            >\n              Add Movie\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"error\"\n              onClick={backToMainPage}\n              startIcon={<TiArrowBackOutline />}\n            >\n              Back\n            </Button>\n          </form>\n        </div>\n\n        {/* Po kliknutí na Add Movie se vyrenderuje modální okno, kde se zadá URL obrázku */}\n        {addImgDisplay == true ? (\n          <Backdrop>\n            <AddImgURLModal\n              movieToBeAdded={movieToBeAdded}\n              displayImgModalToggle={setAddImgDisplay}\n              backToAddMovie={backToAddMovie}\n            />\n          </Backdrop>\n        ) : (\n          \"\"\n        )}\n      </StyledForm>\n    </ContainerForm>\n  );\n}\n","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/SearchItem.js",["175","176"],"import React, { useContext } from \"react\";\nimport image from \"../../../assets/no-poster-available.webp\";\n\nimport SearchContext from \"../../../store/SearchContext\";\n\nexport default function SearchItem(props) {\n  const { IMG_API } = useContext(SearchContext);\n\n  const releaseDate = new Date(props.movieYear);\n  const releaseYear = releaseDate.getFullYear();\n  const type = typeof releaseYear;\n\n  //Pokud není dotáhnut obrázek z API, tak použije No Poster Found image\n  let foundImgURL = \"\";\n  if (props.imageURL == null) {\n    foundImgURL = image;\n  } else {\n    foundImgURL = IMG_API + props.imageURL;\n  }\n\n  const onClickMovieHandler = () => {\n    //Po přidání filmu se přestanou renderovat vyhledané filmy.\n    props.searchDisplayToggle();\n    const movieItem = {\n      id: Math.random().toString(),\n      title: props.title,\n      movieYear: releaseYear,\n      imageURL: foundImgURL,\n      dateWatched: \"\",\n      stars_1: \"\",\n      stars_2: \"\",\n    };\n\n    props.liftUpMovieToBeAdded(movieItem);\n    props.displayDateModalToggle(true);\n  };\n\n  return (\n    <li onClick={onClickMovieHandler}>\n      <img\n        src={foundImgURL}\n        width=\"64.9px\"\n        height=\"91px\"\n        //Když kliknu na obrázek, pošlu do funkce props.id itemu, na který jsem klikl.\n      />\n      <div className=\"search-movie-data\">\n        <p className=\"search-title\">{props.title}</p>\n        <p>{isNaN(releaseYear) ? \"---\" : releaseYear}</p>\n      </div>\n    </li>\n  );\n}\n","/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/manually/AddImgURLModal.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/manually/Input.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/LoadingSpinner.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/FoundNoMovie.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/Error.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/pages/MainPage.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movies/styled.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/sort-and-statistics/styled.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/movie-detail/styled.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/manually/styled.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/styled.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/components/add-movie/search/styled.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/layout/Header.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/layout/Footer.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/layout/styled.js",[],"/Users/lukasthevicious/Desktop/GitHub/01_Film database/src/layout/Backdrop.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":55,"column":19,"nodeType":"183","messageId":"184","endLine":55,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":13,"column":10,"nodeType":"187","messageId":"188","endLine":13,"endColumn":23},{"ruleId":"185","severity":1,"message":"189","line":13,"column":25,"nodeType":"187","messageId":"188","endLine":13,"endColumn":41},{"ruleId":"181","severity":1,"message":"182","line":65,"column":27,"nodeType":"183","messageId":"184","endLine":65,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":33,"column":23,"nodeType":"183","messageId":"184","endLine":33,"endColumn":25},{"ruleId":"181","severity":1,"message":"182","line":38,"column":30,"nodeType":"183","messageId":"184","endLine":38,"endColumn":32},{"ruleId":"181","severity":1,"message":"182","line":43,"column":30,"nodeType":"183","messageId":"184","endLine":43,"endColumn":32},{"ruleId":"181","severity":1,"message":"182","line":48,"column":30,"nodeType":"183","messageId":"184","endLine":48,"endColumn":32},{"ruleId":"181","severity":1,"message":"182","line":62,"column":61,"nodeType":"183","messageId":"184","endLine":62,"endColumn":63},{"ruleId":"181","severity":1,"message":"182","line":33,"column":29,"nodeType":"183","messageId":"184","endLine":33,"endColumn":31},{"ruleId":"181","severity":1,"message":"182","line":36,"column":29,"nodeType":"183","messageId":"184","endLine":36,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":41,"column":6,"nodeType":"192","endLine":41,"endColumn":8,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":74,"column":9,"nodeType":"196","endLine":79,"endColumn":11},{"ruleId":"181","severity":1,"message":"182","line":86,"column":25,"nodeType":"183","messageId":"184","endLine":86,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":86,"column":55,"nodeType":"183","messageId":"184","endLine":86,"endColumn":57},{"ruleId":"185","severity":1,"message":"197","line":23,"column":9,"nodeType":"187","messageId":"188","endLine":23,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":10,"column":21,"nodeType":"183","messageId":"184","endLine":10,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":12,"column":28,"nodeType":"183","messageId":"184","endLine":12,"endColumn":30},{"ruleId":"181","severity":1,"message":"182","line":14,"column":28,"nodeType":"183","messageId":"184","endLine":14,"endColumn":30},{"ruleId":"190","severity":1,"message":"198","line":44,"column":6,"nodeType":"192","endLine":44,"endColumn":18,"suggestions":"199"},{"ruleId":"181","severity":1,"message":"182","line":78,"column":25,"nodeType":"183","messageId":"184","endLine":78,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":133,"column":25,"nodeType":"183","messageId":"184","endLine":133,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":134,"column":34,"nodeType":"183","messageId":"184","endLine":134,"endColumn":36},{"ruleId":"181","severity":1,"message":"182","line":166,"column":35,"nodeType":"183","messageId":"184","endLine":166,"endColumn":37},{"ruleId":"181","severity":1,"message":"182","line":122,"column":24,"nodeType":"183","messageId":"184","endLine":122,"endColumn":26},{"ruleId":"185","severity":1,"message":"200","line":11,"column":9,"nodeType":"187","messageId":"188","endLine":11,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":40,"column":7,"nodeType":"196","endLine":45,"endColumn":9},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'sortCondition' is assigned a value but never used.","Identifier","unusedVar","'setSortCondition' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["203"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'API_URL' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getMovies' and 'searchURL'. Either include them or remove the dependency array.",["204"],"'type' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [props.id]",{"range":"209","text":"210"},"Update the dependencies array to be: [getMovies, searchTerm, searchURL]",{"range":"211","text":"212"},[1350,1352],"[props.id]",[1420,1432],"[getMovies, searchTerm, searchURL]"]